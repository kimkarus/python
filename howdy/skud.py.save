#!/usr/bin/env python3

import sys
import os
import fdb
from datetime import timedelta, datetime

def file_read(fname):
        content_array = []
        with open(fname) as f:
                for line in f:
                        line=line.replace('\n','')
                        content_array.append(str(line))
        return content_array


def getUidUser(label):
	file_lines = file_read("/etc/howdy_nison_skud_list")
	len_lines = len(file_lines)
	if len_lines > 0:
		for line in file_lines:
			arr = line.split(',')
			if arr[0] == label:
				return int(arr[1])
	return 0


if len(sys.argv) < 1:
	print(1)
	sys.exit(1)

label = sys.argv[1]

if label == "":
	print(2)
	sys.exit(2)

user_id = getUidUser(label)
print(user_id)
now = datetime.now()
now_timestamp = now.timestamp()
today = now.strftime('%d.%m.%Y')
todate_datetime = now.strftime("%d.%m.%Y %H:%M:%S")
today0 = today+' 00:00:00'
today1 = today+' 23:59:59'

type_reg_time = 0

if now.hour > 7 and now.hour < 12:
	type_reg_time = 1

if now.hour > 15 and now.hour < 22:
	type_reg_time = 2

if now.hour < 8:
	print(3)
	sys.exit(3)

if now.hour > 23:
	print(4)
	sys.exit(4)

if user_id < 1:
	print(5)
	sys.exit(5)
#type_reg_time = 1
if type_reg_time < 1:
	print(6)
	sys.exit(6)
# Соединение
con = fdb.connect(dsn='192.168.10.173/3053:C:/Program Files (x86)/TimeControl/BASE/OKO.FDB', user='MEGA', password='STMEGA21')

# Объект курсора
cur = con.cursor()

# Выполняем запрос
#UID user
AUID = user_id
#UID admin
AADDUID = 1 
UID_DOOR = 1
sql_0 = "SELECT U.DEVICE_UID, E.UID, E.REGDATEFULL, E.INOUTTYPE FROM GRAPH_FACT_EVENTS E LEFT JOIN USERS U ON (U.UID = E.UID) WHERE (E.REGDATEFULL >= '"+str(today0)+"') AND (E.REGDATEFULL <= '"+str(today1)+"') AND (E.USER_TYPE = 0) AND E.UID = "+str(AUID)+";"
cur.execute(sql_0)
count = len(cur.fetchall())
#print(count)
commit = False
print("sql_count:"+str(count))
if count < 1 and type_reg_time == 2:
        sql_1 = "SELECT ARESULT FROM REG_SETWORKSTATUS(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);"
        cur.callproc("REG_SETWORKSTATUS", (1,AUID,AADDUID,UID_DOOR,str(todate_datetime),type_reg_time,1,1,1,0,0,0,0,0,0,0,0,type_re>
        outputParams = cur.fetchone()
	#
	sql_1 = "SELECT ARESULT FROM REG_SETWORKSTATUS(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);"
        cur.callproc("REG_SETWORKSTATUS", (1,AUID,AADDUID,UID_DOOR,str(todate_datetime),2,1,1,1,0,0,0,0,0,0,0,0,type_re>
        outputParams = cur.fetchone()
        con.commit()
        print("commit")

if count < 1:
	sql_1 = "SELECT ARESULT FROM REG_SETWORKSTATUS(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);"
	cur.callproc("REG_SETWORKSTATUS", (1,AUID,AADDUID,UID_DOOR,str(todate_datetime),type_reg_time,1,1,1,0,0,0,0,0,0,0,0,type_reg_time,0,0,0))
	outputParams = cur.fetchone()
	con.commit()
	print("commit")

con.close()
sys.exit(0)
